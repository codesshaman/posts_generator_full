version: "3"

services:
  nginx:
    image: $NGINX_IMG
    container_name: $NGINX_NAME
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:$NGINX_PORT || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 3
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:z
    depends_on:
      - front
    restart: unless-stopped
    ports:
      - $NGINX_PORT:80
    networks:
      network:
        ipv4_address: $NGINX_HOST

  back:
    build:
      context: .
      dockerfile: back.Dockerfile
    container_name: $BACKJ_NAME
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:$BACKJ_PORT || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - "$BACKJ_PORT:8080"
    volumes:
      - ./back:/app
    networks:
      network:
        ipv4_address: $BACKJ_HOST

  front:
    build:
      context: .
      dockerfile: front.Dockerfile
    container_name: $FRONT_NAME
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:$FRONT_PORT || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    depends_on:
      - back
    ports:
      - "$FRONT_PORT:8000"
    volumes:
      - ./front:/app
    networks:
      network:
        ipv4_address: $FRONT_HOST

  postgres:
    image: $PSTGR_IMG
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      # If your wanna nopass authentication, 
      # you can use the following option:
      # POSTGRES_HOST_AUTH_METHOD: "trust"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./dump:/docker-entrypoint-initdb.d:z
      - ./postgres-data:/var/lib/postgresql/data:z
    ports:
      - "$PSTGR_PORT:5432"
    container_name: $PSTGR_NAME
    networks:
      network:
        ipv4_address: $PSTGR_HOST

  pgadmin:
    image: $PGADM_IMG
    container_name: $PGADM_NAME
    environment:
      PGADMIN_DEFAULT_EMAIL: $PGADMIN_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_PASSWORD
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - "$PGADM_PORT:80"
    networks:
      network:
        ipv4_address: $PGADM_HOST

networks:
  network:
    driver: bridge
    name: $NETWK_NAME
    ipam:
      config:
        - subnet: $NETWK_ADDR
          gateway: $NETWK_GATE
